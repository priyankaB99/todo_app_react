{"version":3,"sources":["Todo.js","NewTodo.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","completed","text","todoItem","todoId","id","completeTodo","bind","assertThisInitialized","deleteTodo","event","preventDefault","persist","console","log","target","classList","currentComponent","xhttp2","XMLHttpRequest","onreadystatechange","readyState","status","loadTodos","open","setRequestHeader","send","newCompleted","data","JSON","stringify","checkbox","checked","todoName","react_default","a","createElement","type","className","name","onChange","htmlFor","onClick","Component","NewTodo","todoInput","addTodo","handleChange","setState","defineProperty","value","newTodo","parse","responseText","onSubmit","placeholder","App","todosList","sort","printTodos","xhttp","todos","b","localeCompare","todoHTML","i","length","push","src_Todo_0","key","newSort","src_NewTodo","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.835f93e1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Todo.css';\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            completed: this.props.completed,\r\n            text: this.props.todoItem.text,\r\n            todoId: this.props.todoItem.id\r\n        };\r\n        this.completeTodo = this.completeTodo.bind(this);\r\n        this.deleteTodo = this.deleteTodo.bind(this);\r\n    }\r\n\r\n    deleteTodo(event) {\r\n        event.preventDefault();\r\n        event.persist();\r\n        console.log(\"d\", event.target.classList[1]);\r\n\r\n        let currentComponent = this;\r\n\r\n        // Setting variable for ToDo id\r\n        var id = event.target.classList[1];\r\n        // Initalize AJAX Request\r\n        var xhttp2 = new XMLHttpRequest();\r\n        // Response handler\r\n        xhttp2.onreadystatechange = function() {\r\n            // Wait for readyState = 4 & 200 response\r\n            if (this.readyState === 4 && this.status === 200) {\r\n                // parse JSON response\r\n                currentComponent.props.loadTodos()\r\n            } else if (this.readyState === 4) {\r\n                // this.status !== 200, error from server\r\n                console.log(this);\r\n            }\r\n        };\r\n        xhttp2.open(\"DELETE\", \"https://cse204.work/todos/\"+id, true);\r\n    \r\n        xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\r\n        xhttp2.setRequestHeader(\"x-api-key\", \"3144ca-65eefb-684545-408bc6-a79a27\");\r\n        xhttp2.send();\r\n    }\r\n\r\n    completeTodo(event) {\r\n        event.preventDefault();\r\n        event.persist();\r\n        console.log(\"event\", event);\r\n\r\n        let currentComponent = this;\r\n\r\n        var id = event.target.classList[0];\r\n        var newCompleted;\r\n        if (event.target.classList[1] === \"true\") {\r\n            newCompleted = false;\r\n        }\r\n        else {\r\n            newCompleted = true;\r\n        }\r\n        console.log(\"New completion\", newCompleted)\r\n\r\n        // Setting variable for form input\r\n        var data = {\r\n            completed: newCompleted\r\n        }\r\n        console.log(JSON.stringify(data));\r\n\r\n        // Initalize AJAX Request\r\n        var xhttp2 = new XMLHttpRequest();\r\n        // Response handler\r\n        xhttp2.onreadystatechange = function() {\r\n            // Wait for readyState = 4 & 200 response\r\n            if (this.readyState === 4 && this.status === 200) {\r\n                currentComponent.props.loadTodos();\r\n                // currentComponent.setState({\r\n                //     completed: newCompleted\r\n                // })\r\n            } else if (this.readyState === 4) {\r\n                // this.status !== 200, error from server\r\n                console.log(\"put error\", this);\r\n            }\r\n        };\r\n        xhttp2.open(\"PUT\", \"https://cse204.work/todos/\"+id, true);\r\n        xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\r\n        xhttp2.setRequestHeader(\"x-api-key\", '3144ca-65eefb-684545-408bc6-a79a27');\r\n        xhttp2.send(JSON.stringify(data));\r\n    }\r\n\r\n    render() {\r\n        let todoName = \"todoItem\" + this.state.todoId;\r\n        let checkbox;\r\n        let checked;\r\n        console.log(\"PRINT ITEM\", this.state.completed)\r\n        if (this.props.completed) {\r\n            checked = \" checked\"\r\n            checkbox = (<input type=\"checkbox\" checked className={this.state.todoId + \" true\"} name={todoName} onChange={this.completeTodo}></input>);\r\n        }\r\n        else {\r\n            checked = \"\";\r\n            checkbox = (<input type=\"checkbox\" className={this.state.todoId + \" false\"} name={todoName} onChange={this.completeTodo}></input>);\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            {checkbox}\r\n                        </div>\r\n                    </div>\r\n                    <label htmlFor={todoName} className={\"form-check-label todoItem\" + checked}> {this.state.text}</label>\r\n                    <span className={\"close \" + this.state.todoId} onClick={this.deleteTodo}>X</span><br></br>\r\n                </div>\r\n            </div>\r\n        );\r\n        }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport './Todo.css';\r\n\r\nclass NewTodo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todoInput : \"\"\r\n        };\r\n        this.addTodo = this.addTodo.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        event.preventDefault();\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    addTodo(event) {\r\n        event.preventDefault();\r\n        event.persist();\r\n        let newTodo = this.state.todoInput;\r\n\r\n        let currentComponent = this;\r\n\r\n        // Setting variable for form input\r\n        var data = {\r\n            text: newTodo\r\n        };\r\n\r\n        // Initalize AJAX Request\r\n        var xhttp2 = new XMLHttpRequest();\r\n        // Response handler\r\n        xhttp2.onreadystatechange = function() {\r\n            // Wait for readyState = 4 & 200 response\r\n            if (this.readyState === 4 && this.status === 200) {\r\n                // parse JSON response\r\n                var todo = JSON.parse(this.responseText);\r\n                currentComponent.setState({\r\n                    todoInput : \"\"\r\n                })\r\n                currentComponent.props.loadTodos();\r\n            } else if (this.readyState === 4) {\r\n                // this.status !== 200, error from server\r\n                console.log(\"post error\", this);\r\n            }\r\n        };\r\n        xhttp2.open(\"POST\", \"https://cse204.work/todos\", true);\r\n        xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\r\n        xhttp2.setRequestHeader(\"x-api-key\", '3144ca-65eefb-684545-408bc6-a79a27');\r\n        xhttp2.send(JSON.stringify(data));\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <form id=\"addForm\" onSubmit={this.addTodo}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"newTodoInput\">Add To Do Item</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    id=\"newTodoInput\" \r\n                    name=\"todoInput\" \r\n                    onChange={this.handleChange} \r\n                    placeholder=\"Enter To Do\" \r\n                    value={this.state.todoInput}>\r\n                </input>\r\n            </div>\r\n            <button \r\n                type=\"submit\" \r\n                id=\"addTodoButton\" \r\n                className=\"btn btn-primary\"\r\n                >\r\n                    Add\r\n            </button>\r\n        </form>\r\n    );\r\n    }\r\n}\r\n\r\nexport default NewTodo;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Todo from './Todo';\r\nimport NewTodo from './NewTodo';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todosList: [],\r\n            sort: false\r\n        };\r\n        this.loadTodos = this.loadTodos.bind(this);\r\n        this.printTodos = this.printTodos.bind(this);\r\n        this.sort = this.sort.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadTodos();\r\n    }\r\n\r\n    loadTodos() {\r\n        let currentComponent = this;\r\n        // LOAD TODOS\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = function() {\r\n            if (this.readyState === 4 && this.status === 200) {\r\n                var todos = JSON.parse(this.responseText);\r\n                console.log(todos)\r\n                console.log(\"SORT?\", currentComponent.state.sort)\r\n                if (currentComponent.state.sort) {\r\n                    todos.sort(function (a, b) {\r\n                        // return b.created_at - a.created_at;\r\n                        // return parseFloat(b.created_at) - parseFloat(a.created_at);\r\n                        return a.text.localeCompare(b.text);\r\n                    });\r\n                }\r\n                currentComponent.setState({\r\n                    todosList: todos\r\n                });\r\n            }\r\n            else {\r\n                console.log(\"Load error\", this);\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", \"https://cse204.work/todos\", true);\r\n        xhttp.setRequestHeader(\"x-api-key\",\"3144ca-65eefb-684545-408bc6-a79a27\");\r\n        xhttp.send();\r\n    }\r\n\r\n    printTodos() {\r\n        // PRINT TODOS\r\n        let todoHTML = [];\r\n        for (let i=0; i<this.state.todosList.length; i++) {\r\n            let todoItem = this.state.todosList[i];\r\n            console.log(todoItem);\r\n            todoHTML.push(\r\n                <Todo loadTodos={this.loadTodos} key={todoItem.id} completed={todoItem.completed} todoItem={todoItem}/>\r\n            );\r\n        }\r\n        return todoHTML;\r\n    }\r\n\r\n    sort() {\r\n        let newSort = !this.state.sort;\r\n        this.setState({\r\n            sort: newSort\r\n        })\r\n        this.loadTodos()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n            <div id=\"body\">\r\n                <h2 className=\"text-center\">Welcome to the Best, Least-Generic ToDo App on the Internet</h2>\r\n                <NewTodo loadTodos={this.loadTodos}/>\r\n                <div id=\"mainSection\">\r\n                    <h3>Your ToDo's</h3>\r\n                    <hr></hr>\r\n                    {\r\n                        !this.state.sort ?\r\n                        <button className=\"btn btn-sm btn-primary mb-3 mx-auto\" onClick={this.sort}>Sort ToDo's Alphabetically</button>\r\n                        :\r\n                        <button className=\"btn btn-sm btn-secondary mb-3 mx-auto\" onClick={this.sort}>Remove Sort</button>\r\n                    }\r\n                    \r\n                    <div id=\"todoList\">\r\n                        {this.printTodos()}\r\n                    </div>\r\n                </div> \r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}